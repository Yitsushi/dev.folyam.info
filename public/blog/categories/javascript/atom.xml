<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Kategória: javascript | [Dev] Folyam.info]]></title>
  <link href="http://dev.folyam.info/blog/categories/javascript/atom.xml" rel="self"/>
  <link href="http://dev.folyam.info/"/>
  <updated>2013-02-21T17:58:44+01:00</updated>
  <id>http://dev.folyam.info/</id>
  <author>
    <name><![CDATA[Balazs Nadasdi]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Google+ beágyazása Octopress-be]]></title>
    <link href="http://dev.folyam.info/blog/2013/02/21/googleplus-beagyazasa-octopress-be/"/>
    <updated>2013-02-21T00:48:00+01:00</updated>
    <id>http://dev.folyam.info/blog/2013/02/21/googleplus-beagyazasa-octopress-be</id>
    <content type="html"><![CDATA[<p><img class="right" src="http://dev.folyam.info.s3.amazonaws.com/2013-02-21-googleplus-beagyazasa-octopress-be/octopress.png" title="&#34;Octopress&#34;" alt="&#34;Octopress&#34;"></p>

<p>Ezzel a bejegyzéssel tesztelem, az <a href="http://octopress.org/">Octopress</a> kiegészítőmet
<a href="https://plus.google.com/">Google+</a>-hoz. A lényege az, hogy a bejegyzésbe beraksz
egy <code>googleplus_post</code> blokkot a bejegyzésbe és a rendszer begenerálja a kívánt tartalmat.</p>

<p>A forrás, amint minden hibáját kigyomláltam publikus lesz,
ahogyan eddig is minden más. Ha van rá kereslet, akkor akár végig is magyarázom egy cikk
keretében a működését, illetve miként tudsz te is ilyet írni.</p>

<h3>Működés</h3>

<p>Mivel simán beágyazni nem tudom élőben, így a poszt generálásakor egy <code>Liquid::Tag</code>
kiegészítő letölti az adott bejegyzést a Google+ API használatával. A legnagyobb probléma,
hogy nem lehet értelmesen lekérdezni egy adott bejegyzést, mert a bejegyzés azonosítója
nem egyenlő az oldalon lévő URL-ben szereplő karakterlánccal. Az egyetlen mód jelenleg amit
találtam, hogy lekérdezem a bejegyzéseit az adott embernek vagy oldalnak és megnézem
melyiknek az URL-jeben szerepel a megadott <code>post_id</code>. Remélem Azért erre később találok
értelmes megoldást. Minden megtalált bejegyzés adatát fájlrendszeren elraktározom, hogy
ne kelljen minden alkalommal megkérdezni a szervert :) Nagyjából ennyi a működése.</p>

<!--more-->


<h3>Használat</h3>

<pre><code>{% googleplus_post page_id post_id %}

page_id: Az oldal vagy személy Google+ ID-ja
post_id: Az adott bejegyzés ID-ja
</code></pre>

<p>Tehát, ha ezt a bejegyzést szeretném megosztani, akkor megnézem ennek az címét, ami nem
más, mint <code>https://plus.google.com/u/0/105613682641367710983/posts/DWc2TZgCtuS</code>.</p>

<p>Ezek alapján <code>page_id: 105613682641367710983</code> és <code>post_id: DWc2TZgCtuS</code>. Jöhet a cikk és
berakható <code>{% googleplus_post 105613682641367710983 DWc2TZgCtuS %}</code>
tag elhelyezéssel.</p>

<h3>Végeredmény</h3>

<p><div class="googleplusembed">
  <div class="actor">
    <img class="left" src="https://lh5.googleusercontent.com/-uC9beXHrj5E/AAAAAAAAAAI/AAAAAAAAAAA/KAEqsBaPboc/photo.jpg?sz=50">
    <div>
      <strong><a href="https://plus.google.com/105613682641367710983">+[Dev] Folyam.info</a></strong>
      <small>2012-12-28 </small>
      <a class="jump" href="https://plus.google.com/105613682641367710983/posts/DWc2TZgCtuS">ugr&aacute;s a bejegyz&eacute;sre</a>
    </div>
  </div>
  <div class="annotation">
    Érdekesség. Sőt. Ez nem pusztán érdekesség, hanem elsajátítandóság!<br><br> <a class='ot-hashtag' href='https://plus.google.com/s/%23javascript'>#javascript</a>   <a class='ot-hashtag' href='https://plus.google.com/s/%23security'>#security</a>  
  </div>
  <div class="original">
    <div class="actor">
      <img class="left" src="https://lh3.googleusercontent.com/-4-TWa77Mg_4/AAAAAAAAAAI/AAAAAAAAAAA/73tyvxdE2iI/photo.jpg?sz=50">
      <div>
        <strong>
          <a href="https://plus.google.com/114636678211810483111">+JavaScript</a>
        </strong>
        <a class="jump" href="https://plus.google.com/114636678211810483111/posts/DmmGhp4yLwY">ugr&aacute;s a bejegyz&eacute;sre</a>
      </div>
    </div>
    <div class="annotation">
      <b>Slides: Securing a JavaScript based Web Application</b>
    </div>
    <div class="attachments"><div class="attachment">
  <a href="http://bit.ly/TCiqXF"><img class="left" src="http://eoftedal.github.com/WebRebels2012/presentation/images/erlend.jpg"></a>
  <div><a href="http://bit.ly/TCiqXF"><strong>Securing a JavaScript based Web Applicaiton</strong></a></div>
  <div class="annotation">(function(q) { var a = location.href.split("#!")[1]; if (a) { g.location = a; } }). https://twitter.com/#!/web_rebels ↓ https://twitter.com/web_rebels. https://twitter.com/#!http://evil.com ↓ http://e...</div>
</div>
</div>
  </div>
</div>
</p>

<h3>Mi a következő lépés?</h3>

<p>Kommentek betöltése. Mivel normális embed még nincs, ezért marad az a megoldás jelenleg
<em>(mivel mindenféle gányolásos megoldásokat nem szeretem)</em>, hogy felállítok időkorlátokat.
Az időkorlátokon belül pedig adott időintervallumban frissítem a megjegyzéseket.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[URL rövidítő 1. rész]]></title>
    <link href="http://dev.folyam.info/blog/2013/02/16/url-rovidito-1-resz/"/>
    <updated>2013-02-16T12:09:00+01:00</updated>
    <id>http://dev.folyam.info/blog/2013/02/16/url-rovidito-1-resz</id>
    <content type="html"><![CDATA[<p><img class="left" src="http://dev.folyam.info.s3.amazonaws.com/2013-02-16-url-rovidito-1-resz/AngularJS-hogyan.png" title="&#34;AngularJS Hogyan&#34;" alt="&#34;AngularJS Hogyan&#34;"></p>

<p>Most készíteni fogunk egy URL rövidítő oldalt. Az első részben csak offline lesz és semmit
sem fog elmenteni sehova. A második részben alá pakolunk egy szerveroldali réteget, hogy
amit berakunk URL-eket, azokat mentse is el valahova.</p>

<p>Kezdjük a legelején. Mit fogunk használni? <a href="http://angularjs.org/">AngularJS</a>
fogja kezelni a kliensoldali részt. Ez fog ügyelni arra, hogy minden adat a helyén legyen.
Először ezt állítjuk hadrendbe. Persze jó volna egyből alá rakni egy
<a href="http://nodejs.org/">Node.js</a> keretet, hogy később ne kelljen túlzottan mozgatni a
dolgokat, de ezt mi most nem tesszük meg. Most csak a kliensoldali résszel foglalkozunk.
Amúgy sem kell sokat mozgatni és átírni hozzá.</p>

<!--more-->


<p>A következő felvonásban alá rakjuk a már emlegetett Node.js-t és adatbázisként
<a href="http://www.mongodb.org/">MongoDB</a>-t fogunk használni. Természetesen mással is használható,
de jelenleg én ehhez csinálom a cikket és ezt használom. Minden későbbi fejezet attól függ,
hogy mi az igény és/vagy még mire lesz kedvem.</p>

<h3>HTML struktúra</h3>

<p>Mivel ez egy rém egyszerű dolog lesz, mármint a végcél, így sok dolgunk nincs a layout
munkálataival.</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>Layout (index.html)</span> <a href='/downloads/code/2013-02-16-url-rovidito-1-resz/index.html'>download</a></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'><span class="nt">&lt;html</span> <span class="na">ng-app</span><span class="nt">&gt;</span>
</span><span class='line'>  <span class="nt">&lt;head&gt;</span>
</span><span class='line'>    <span class="nt">&lt;link</span> <span class="na">rel=</span><span class="s">&quot;stylesheet&quot;</span> <span class="na">href=</span><span class="s">&quot;stylesheets/main.css&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>    <span class="nt">&lt;script </span><span class="na">type=</span><span class="s">&quot;text/javascript&quot;</span> <span class="na">src=</span><span class="s">&quot;javascripts/angular.min.js&quot;</span><span class="nt">&gt;&lt;/script&gt;</span>
</span><span class='line'>    <span class="nt">&lt;script </span><span class="na">type=</span><span class="s">&quot;text/javascript&quot;</span> <span class="na">src=</span><span class="s">&quot;javascripts/app.js&quot;</span><span class="nt">&gt;&lt;/script&gt;</span>
</span><span class='line'>  <span class="nt">&lt;/head&gt;</span>
</span><span class='line'>  <span class="nt">&lt;body&gt;</span>
</span><span class='line'>    <span class="nt">&lt;div</span> <span class="na">ng-controller=</span><span class="s">&#39;App.controllers.Link&#39;</span><span class="nt">&gt;</span>
</span><span class='line'>      <span class="nt">&lt;form</span> <span class="na">ng-submit=</span><span class="s">&quot;addLink()&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>        <span class="nt">&lt;input</span> <span class="na">type=</span><span class="s">&quot;text&quot;</span>
</span><span class='line'>               <span class="na">ng-model=</span><span class="s">&quot;newLink&quot;</span>
</span><span class='line'>               <span class="na">placeholder=</span><span class="s">&quot;add new link here&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>        <span class="nt">&lt;input</span> <span class="na">type=</span><span class="s">&quot;submit&quot;</span> <span class="na">value=</span><span class="s">&quot;add&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>      <span class="nt">&lt;/form&gt;</span>
</span><span class='line'>
</span><span class='line'>      <span class="nt">&lt;table&gt;</span>
</span><span class='line'>        <span class="nt">&lt;tr&gt;</span>
</span><span class='line'>          <span class="nt">&lt;th&gt;</span>Short link<span class="nt">&lt;/th&gt;</span>
</span><span class='line'>          <span class="nt">&lt;th&gt;</span>Target link<span class="nt">&lt;/th&gt;</span>
</span><span class='line'>          <span class="nt">&lt;th&gt;</span>Clicks<span class="nt">&lt;/th&gt;</span>
</span><span class='line'>          <span class="nt">&lt;th&gt;</span>Created at<span class="nt">&lt;/th&gt;</span>
</span><span class='line'>        <span class="nt">&lt;/tr&gt;</span>
</span><span class='line'>        <span class="nt">&lt;tr</span> <span class="na">ng-repeat=</span><span class="s">&quot;link in links&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>          <span class="nt">&lt;td&gt;&lt;a</span> <span class="na">href=</span><span class="s">&quot;{{link.short}}&quot;</span><span class="nt">&gt;</span>{{link.short}}<span class="nt">&lt;/a&gt;&lt;/td&gt;</span>
</span><span class='line'>          <span class="nt">&lt;td&gt;&lt;a</span> <span class="na">href=</span><span class="s">&quot;{{link.long}}&quot;</span><span class="nt">&gt;</span>{{link.long}}<span class="nt">&lt;/a&gt;&lt;/td&gt;</span>
</span><span class='line'>          <span class="nt">&lt;td&gt;</span>{{link.clicks}}<span class="nt">&lt;/td&gt;</span>
</span><span class='line'>          <span class="nt">&lt;td&gt;</span>{{link.created_at}}<span class="nt">&lt;/td&gt;</span>
</span><span class='line'>        <span class="nt">&lt;/tr&gt;</span>
</span><span class='line'>      <span class="nt">&lt;/table&gt;</span>
</span><span class='line'>    <span class="nt">&lt;/div&gt;</span>
</span><span class='line'>  <span class="nt">&lt;/body&gt;</span>
</span><span class='line'><span class="nt">&lt;/html&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>Mi mit jelent ebben? Első ami szembetűnik, hogy a <code>html</code> kapott egy <code>ng-app</code>
tulajdonságot. Ez megmondja, majd szépen az AngularJS-nek, hogy ez egy olyan alkalmazás,
amit neki kezelnie kell. Itt értéknek megadható egy <code>Project</code> a tulajdonság értékeként,
de ez nekünk most nem fontos.</p>

<p>Ezek után a szokásos <code>head</code> rész, amiben betöltjük a css fájlunkat, ami majd a stílust
határozza meg, az <code>angular.min.js</code>, ami önmaga az AngularJS és az <code>app.js</code> fájt, ami
tartalmazza, hogy mit csinál az oldal. A mi saját kódunk.</p>

<p>``` html</p>

<div ng-controller='App.controllers.Link'>
  <!-- egyéb kód -->
</div>


<p>```</p>

<p>Az AngularJS alapvetően ebből tudja, hogy az adott elem meglétével, kelleni fog neki egy
kontroller. Jelen esetben a <code>Link</code> kontroller. Az <code>App.controllers</code> nem AngularJS
specifikus, hanem én így különítem el a kód bizonyos részeit, ami most ugye a kontroller.</p>

<p>A kontroller fog cselekedni. Ez mondja meg, hogy mit kell csinálni. Itt adhatunk meg
társításokat (<code>data bind</code>), amikkel adott mező értékét össze tudjuk kötni változókkal,
vagy épp függvényekkel. Azok a függvények lesznek eléthetőek <em>(mondjuk)</em> a <code>view</code> számára,
amiket itt megmondunk, hogy elérhet.</p>

<p>``` html
<form ng-submit="addLink()">
  &lt;input type="text"</p>

<pre><code>     ng-model="newLink"
     placeholder="add new link here"&gt;
</code></pre>

<p>  <input type="submit" value="add">
</form>
```</p>

<p><div class='ad-left'>
  <script type="text/javascript"><!--
    google_ad_client = "ca-pub-4870755332408030";
    /* DevFolyamArticle */
    google_ad_slot = "1829466906";
    google_ad_width = 300;
    google_ad_height = 250;
  //-->
  </script>
  <script type="text/javascript"
          src="http://pagead2.googlesyndication.com/pagead/show_ads.js">
  </script>
</div></p>

<p>Ezek után találkozunk egy űrlappal, amiben egy sima <code>text</code> típusú mező és egy <code>submit</code>
gomb található. A <code>form</code> rendelkezik egy <code>ng-submit</code> tulajdonsággal, aminek az értéke
<code>addLink()</code>. Ez tulajdonképpen egyenlő az <code>onSubmit</code> eseményre való hivatkozással, csak
épp itt a szokásos <code>ng-</code> prefixet kapta meg. Az <code>addLink</code> nevű függvény fog lefutni.
A zárójelek azért kellenek, mert változót is átadhatunk neki paraméterben.</p>

<p>A beviteli mezőnk pedig egy <code>ng-model</code> tulajdonsággal lett felruházva, aminek hatására,
ha változik a mező értéke, akkor azt megkapja egy <code>newLink</code> nevű változó is a
kontrollerben megadottak szerint <em>(hamarosan)</em>.</p>

<p><code>html
&lt;tr ng-repeat="link in links"&gt;
  &lt;td&gt;&lt;a href="{{link.short}}"&gt;{{link.short}}&lt;/a&gt;&lt;/td&gt;
  &lt;td&gt;&lt;a href="{{link.long}}"&gt;{{link.long}}&lt;/a&gt;&lt;/td&gt;
  &lt;td&gt;{{link.clicks}}&lt;/td&gt;
  &lt;td&gt;{{link.created_at}}&lt;/td&gt;
&lt;/tr&gt;
</code></p>

<p>Ezek után egy sima táblázatot látunk, ami talán abban tér el a megszokottól, hogy a fejléc
után a <code>tr</code> kapott egy <code>ng-repeat</code>-et. Ez amolyan <code>forEach</code> azzal a különbséggel, hogy nem
a benne találhatóakat ismétli, hanem önmagát az elemet is. Tehát jelen esetben a
<em>(kontrollerben meghatározott)</em> <code>links</code> tömb minden elemén végighaladunk és minden elemre
a cikluson belül <code>link</code> néven akarunk hivatkozni.</p>

<p>Ezek után – hasonlóan a <a href="http://twig.sensiolabs.org/">Twig</a> <em>(PHP)</em> template rendszerhez –
két kapcsoszárójelbe rakva pakolunk ki tartalmat a böngészőbe.</p>

<h3>JavaScript: AngularJS</h3>

<p>Most jön a lényegi rész. Eddig csak firkáltunk, a lapunk nem csinált semmit és még hülyén
is nézett ki. Varázsoljunk rá mozgást.</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>AngularJS alkalmazásunk (app.js)</span> <a href='/downloads/code/2013-02-16-url-rovidito-1-resz/javascripts/app.js'>download</a></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="kd">var</span> <span class="nx">App</span> <span class="o">=</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">controllers</span><span class="o">:</span> <span class="p">{},</span>
</span><span class='line'>  <span class="nx">configuration</span><span class="o">:</span> <span class="p">{</span>
</span><span class='line'>    <span class="nx">domain</span><span class="o">:</span> <span class="s2">&quot;s.l&quot;</span><span class="p">,</span>
</span><span class='line'>    <span class="nx">protocol</span><span class="o">:</span> <span class="s2">&quot;http&quot;</span>
</span><span class='line'>  <span class="p">},</span>
</span><span class='line'>  <span class="nx">utils</span><span class="o">:</span> <span class="p">{}</span>
</span><span class='line'><span class="p">};</span>
</span><span class='line'>
</span><span class='line'><span class="p">(</span><span class="kd">function</span> <span class="nx">UrlUtils</span> <span class="p">(</span><span class="nx">app</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">app</span><span class="p">.</span><span class="nx">utils</span><span class="p">.</span><span class="nx">url</span> <span class="o">=</span> <span class="p">{</span>
</span><span class='line'>    <span class="nx">get</span><span class="o">:</span> <span class="kd">function</span><span class="p">(</span><span class="nx">path</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>      <span class="k">return</span> <span class="nx">app</span><span class="p">.</span><span class="nx">configuration</span><span class="p">.</span><span class="nx">protocol</span> <span class="o">+</span> <span class="s2">&quot;://&quot;</span> <span class="o">+</span> <span class="nx">app</span><span class="p">.</span><span class="nx">configuration</span><span class="p">.</span><span class="nx">domain</span> <span class="o">+</span> <span class="nx">path</span><span class="p">;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>  <span class="p">};</span>
</span><span class='line'><span class="p">})(</span><span class="nx">App</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'><span class="p">(</span><span class="kd">function</span> <span class="nx">LinkController</span> <span class="p">(</span><span class="nx">app</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">app</span><span class="p">.</span><span class="nx">controllers</span><span class="p">.</span><span class="nx">Link</span> <span class="o">=</span> <span class="kd">function</span> <span class="p">(</span><span class="nx">$scope</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="nx">$scope</span><span class="p">.</span><span class="nx">links</span> <span class="o">=</span> <span class="p">[];</span>
</span><span class='line'>    <span class="nx">$scope</span><span class="p">.</span><span class="nx">addLink</span> <span class="o">=</span> <span class="kd">function</span> <span class="nx">addLink</span> <span class="p">()</span> <span class="p">{</span>
</span><span class='line'>      <span class="nx">$scope</span><span class="p">.</span><span class="nx">links</span><span class="p">.</span><span class="nx">unshift</span><span class="p">({</span>
</span><span class='line'>        <span class="kr">short</span><span class="o">:</span> <span class="nx">App</span><span class="p">.</span><span class="nx">utils</span><span class="p">.</span><span class="nx">url</span><span class="p">.</span><span class="nx">get</span><span class="p">(</span><span class="s2">&quot;/a4d56g&quot;</span><span class="p">),</span>
</span><span class='line'>        <span class="kr">long</span><span class="o">:</span> <span class="nx">$scope</span><span class="p">.</span><span class="nx">newLink</span><span class="p">,</span>
</span><span class='line'>        <span class="nx">clicks</span><span class="o">:</span> <span class="mi">0</span><span class="p">,</span>
</span><span class='line'>        <span class="nx">created_at</span><span class="o">:</span> <span class="k">new</span> <span class="nb">Date</span><span class="p">()</span>
</span><span class='line'>      <span class="p">});</span>
</span><span class='line'>
</span><span class='line'>      <span class="nx">$scope</span><span class="p">.</span><span class="nx">newLink</span> <span class="o">=</span> <span class="s2">&quot;&quot;</span><span class="p">;</span>
</span><span class='line'>      <span class="k">return</span> <span class="kc">null</span><span class="p">;</span>
</span><span class='line'>    <span class="p">};</span>
</span><span class='line'>  <span class="p">};</span>
</span><span class='line'>  <span class="nx">app</span><span class="p">.</span><span class="nx">controllers</span><span class="p">.</span><span class="nx">Link</span><span class="p">.</span><span class="nx">$inject</span> <span class="o">=</span> <span class="p">[</span><span class="s1">&#39;$scope&#39;</span><span class="p">];</span>
</span><span class='line'><span class="p">})(</span><span class="nx">App</span><span class="p">);</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p><div class='ad-right'>
  <script type="text/javascript"><!--
    google_ad_client = "ca-pub-4870755332408030";
    /* DevFolyamArticle */
    google_ad_slot = "1829466906";
    google_ad_width = 300;
    google_ad_height = 250;
  //-->
  </script>
  <script type="text/javascript"
          src="http://pagead2.googlesyndication.com/pagead/show_ads.js">
  </script>
</div></p>

<p>Akkor most bontsuk szét. Először is találunk egy <code>App</code> objektumot, amibe pakoltunk egy
üres <code>controllers</code> objektumot. Ez lesz majd a kontrollerek helye. Ismétlem nem kell így
csinálni, de én így látom át igazán. Mindennek meg kell lennie a helyének :) Továbbá
található benne egy <code>utils</code> és egy <code>configuration</code> objektum. Előbbibe pakoljuk majd azokat
a kódjainkat, amik segítenek nekünk, mint például az URL generáló.
Utóbbiban pedig az URL képzéséhez használt adatok vannak, mint például a domain és a protocol.</p>

<p>``` javascript
(function UrlUtils (app) {
  app.utils.url = {</p>

<pre><code>get: function(path) {
  return app.configuration.protocol + "://" + app.configuration.domain + path;
}
</code></pre>

<p>  };
})(App);
```</p>

<p>Ez egy rém egyszerű függvény, ami kap egy <code>path</code> értéket, és elédobja az URL statikus
részét. Nagyjából mindent be szoktam zárni egy függvénybe, hogy csak ahhoz férjen hozzá,
amihez én akarom és belőle is csak az látszódjon, amit én akarok, hogy lássanak belőle.</p>

<p><code>javascript
app.controllers.Link = function ($scope) {
  // egyéb kód
}
app.controllers.Link.$inject = ['$scope'];
</code></p>

<p>Itt két dolgot csinálunk, mégis egyet. Először is létrehozunk egy kontrollert, ami a már
jól ismert <code>App.controllers.Link</code> címen lesz elérhető. Egyetlen paramétere a <code>$scope</code>, mert
most még mást nem használunk. Ami a <code>$scope</code> alá bekerül <em>(tulajdonsága)</em>, az fog látszódni
a <code>view</code>-ban is. Tehát itt fogjuk majd létrehozni a <code>links</code> tömböt és az <code>addLink</code> függvényt.
Az utána lévő sor megadja, hogy mik a paraméterei a kontrollerünknek, mert ha tömörítjük a
végén a JavaScript kódot, akkor nem fogja tudni az AngularJS, hogy mi a neve a változónak.
Érdekes elgondolás, hogy a változó neve alapján adja meg a paraméter értékét és nem a
paraméterek sorrendje számít, de így nagyon kényelmes.</p>

<p>``` javascript
$scope.links = [];
$scope.addLink = function addLink () {
  $scope.links.unshift({</p>

<pre><code>short: App.utils.url.get("/a4d56g"),
long: $scope.newLink,
clicks: 0,
created_at: new Date()
</code></pre>

<p>  });</p>

<p>  $scope.newLink = "";
  return null;
};
```</p>

<p>Legyen akkor a <code>$scope</code> alatt egy <code>links</code> tömb, ami alapértelmezetten üres. A következő
részben majd letöltjük a szerverről induláskor a már meglévőket. Ezek után létrehozzuk az
<code>addLink</code> függvényt, ami ugyebát az űrlapunk <code>onSubmit</code> eseményére hívódik meg. Az egész
egy egyszerű tömbművelettel indul, minthogy egy objektumot betolunk a <code>links</code> tömbünk
elejére. A tömb tulajdonságai ugyebár a <code>short</code>, amit az <code>App.utils.url.get</code> függvénye
ad vissza, a <code>long</code> az a megadott linkünk. A <code>clicks</code> jelenleg teljesen mindegy, simán
nullára állítjuk. A <code>created_at</code> mező meg csak azért van, hogy tudjuk mikor lett
létrehozva így felveszi az aktuális időt értéknek. Ezek után kitöröljük a <code>newLink</code>
értékét.</p>

<p><div class='ad-right'>
  <script type="text/javascript"><!--
    google_ad_client = "ca-pub-4870755332408030";
    /* DevFolyamArticle */
    google_ad_slot = "1829466906";
    google_ad_width = 300;
    google_ad_height = 250;
  //-->
  </script>
  <script type="text/javascript"
          src="http://pagead2.googlesyndication.com/pagead/show_ads.js">
  </script>
</div></p>

<p>Mivel a tömbünk össze lett kapcsolva az <code>ng-repeat</code> használata során a táblázattal, így
ha változik a tömb, akkor frissíti a táblázat sorait.</p>

<p>Nem túl érdekes a link generálása, mert most statikusan minden URL végére ugyan azt
fogja tenni. Amiért nem törtem magam rajta, az azért van, mert ez úgyis a szerver oldalon
fog generálódni.</p>

<p>Van benne egy hivatkozás, ami furcsa lehet – még a többihez képest is – mégpedig önmaga
a <code>newLink</code>. Ugye már mondtam, hogy a kontrollerben megadott változókhoz fér hozzá a <code>view</code>.
Viszont, ha <code>ng-model</code> segítségével megadok egy változót, ám az nem létezik, akkor
létrehozza nekünk a <code>$scope</code> alatt.</p>

<h3>Meddig jutottunk?</h3>

<p>Egyelőre egy teljesen használhatatlan offline alkalmazást csináltunk, amibe be tudunk
írni bármit és ahhoz ő csinál egy "rövid" címet. Az eddig elkészült rész
<a href="/downloads/code/2013-02-16-url-rovidito-1-resz/index.html">megtekinthető itt</a>.</p>
]]></content>
  </entry>
  
</feed>
